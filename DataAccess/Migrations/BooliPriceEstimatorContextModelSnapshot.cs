// <auto-generated />
using System;
using DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataAccess.Migrations
{
    [DbContext(typeof(BooliPriceEstimatorContext))]
    partial class BooliPriceEstimatorContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Common.Models.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("PositionId");

                    b.HasKey("Id");

                    b.HasIndex("PositionId");

                    b.ToTable("Location");
                });

            modelBuilder.Entity("Common.Models.NamedArea", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Area");

                    b.Property<int?>("LocationId");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.ToTable("NamedArea");
                });

            modelBuilder.Entity("Common.Models.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Latitude");

                    b.Property<double>("Longitude");

                    b.HasKey("Id");

                    b.ToTable("Position");
                });

            modelBuilder.Entity("Common.Models.SoldObject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AdditionalArea");

                    b.Property<int>("BooliId");

                    b.Property<double?>("Floor");

                    b.Property<double>("LivingArea");

                    b.Property<int?>("LocationId");

                    b.Property<string>("ObjectType");

                    b.Property<int>("PlotArea");

                    b.Property<int?>("Rent");

                    b.Property<double>("Rooms");

                    b.Property<string>("SoldDate");

                    b.Property<int>("SoldPrice");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.ToTable("SoldHousingObjects");
                });

            modelBuilder.Entity("Common.Models.Location", b =>
                {
                    b.HasOne("Common.Models.Position", "Position")
                        .WithMany()
                        .HasForeignKey("PositionId");
                });

            modelBuilder.Entity("Common.Models.NamedArea", b =>
                {
                    b.HasOne("Common.Models.Location")
                        .WithMany("NamedAreas")
                        .HasForeignKey("LocationId");
                });

            modelBuilder.Entity("Common.Models.SoldObject", b =>
                {
                    b.HasOne("Common.Models.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId");
                });
#pragma warning restore 612, 618
        }
    }
}
